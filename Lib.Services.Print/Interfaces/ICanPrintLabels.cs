namespace Lib.Services.Print
{
    /// <summary>
    /// Этот интерфейс должен быть реализован на уровне класса приложения, либо
    /// класса главной вьюмодели (AppContext, App.ctx), от которой наследуются
    /// все конкретные вьюмодели
    /// </summary>
    public interface ICanPrintLabels
    {
        /// <summary>
        /// Список системных принтеров используется только для того, чтобы
        /// помочь пользователю выбрать имя драйвера, на который нужно отправлять
        /// задаление печати
        /// </summary>
        public IReadOnlyCollection<IPrinter> SystemPrinters { get; }

        /// <summary>
        /// Коллекция сетапов, к которой пользователь может обратиться, чтобы добавить
        /// или удалить сетапы (в отличие от SystemPrinters она не только для чтения)
        /// 
        /// Если будет поддержано хранение сетапов в файле, то при загрузке
        /// приложения они будут считываться и пополнять коллекцию. Однако это уже
        /// детали рализации. По умолчанию коллекцию придется заполнять заново
        /// при каждом новом пуске программы.
        /// </summary>
        public ICollection<ILabelSetup> LabelSetups { get; }

        /// <summary>
        /// Этот метод гарантирует создание контекста для формы, которая используется
        /// для добавления/редактирования сетапа этикетки. Если в метод передается
        /// инстанс labelSetup, форма считается открытой для редактирования. Соответственно,
        /// конструктор обеспечит заполнение полей по умолчанию. От этого, в том числе,
        /// может зависеть содержимое кнопки (создать/сохранить).
        /// </summary>
        public void ShowLabelSetupForm(ILabelSetupForm? labelSetup);
    }
}
